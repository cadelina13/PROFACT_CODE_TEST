// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProfactWebApi;

#nullable disable

namespace ProfactWebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230202035629_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProfactWebApi.Models.Boundaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoordinateId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinateId");

                    b.ToTable("Boundaries");
                });

            modelBuilder.Entity("ProfactWebApi.Models.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("ProfactWebApi.Models.PostData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NortheastId")
                        .HasColumnType("int");

                    b.Property<string>("Search")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SouthwestId")
                        .HasColumnType("int");

                    b.Property<int>("Zoom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NortheastId");

                    b.HasIndex("SouthwestId");

                    b.ToTable("PostDatas");
                });

            modelBuilder.Entity("ProfactWebApi.Models.Boundaries", b =>
                {
                    b.HasOne("ProfactWebApi.Models.Coordinate", "Coordinate")
                        .WithMany()
                        .HasForeignKey("CoordinateId");

                    b.Navigation("Coordinate");
                });

            modelBuilder.Entity("ProfactWebApi.Models.PostData", b =>
                {
                    b.HasOne("ProfactWebApi.Models.Coordinate", "Northeast")
                        .WithMany()
                        .HasForeignKey("NortheastId");

                    b.HasOne("ProfactWebApi.Models.Coordinate", "Southwest")
                        .WithMany()
                        .HasForeignKey("SouthwestId");

                    b.Navigation("Northeast");

                    b.Navigation("Southwest");
                });
#pragma warning restore 612, 618
        }
    }
}
